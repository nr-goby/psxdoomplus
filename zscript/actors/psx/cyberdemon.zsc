class PsxCyberdemon : PsxActor replaces Cyberdemon
{
    Default
    {
		//$Title "Cyberdemon"
		
        Health 4000;
		Radius 40;
		Height 110;
		Mass 1000;
		Speed 16;
		PainChance 20;
		Monster;
		MinMissileChance 160;
		+BOSS 
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		SeeSound "cyber/sight";
		PainSound "cyber/pain";
		DeathSound "cyber/death";
		ActiveSound "cyber/active";
		Obituary "$OB_CYBORG";
		Tag "$FN_CYBER";

        +MOVEWITHSECTOR;
        +PsxActor.WAITLOOK;
        +PsxActor.SEETARGET;
    }

    States
	{
        Spawn:
            CYBR A 0 nodelay a_jumpif(IsSmooth(), "SmoothSpawn");
            CYBR AB 10 A_Look;
            Loop;
        SmoothSpawn:
            SCYB AB 10 A_Look;
            Loop;

        See:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothSee");
            CYBR A 4 { A_PCTics(3); A_Hoof(); }
            CYBR ABBCC 4 { A_PCTics(3); A_Chase(); }
            CYBR D 4 { A_PCTics(3); A_Metal(); }
            CYBR D 4 { A_PCTics(3); A_Chase(); }
            Loop;
        SmoothSee:
            SMCM a 4 { A_PCTics(3); A_Hoof(); }
            SMCM BCDEF 4 { A_PCTics(3); A_Chase(); }
            SMCM g 4 { A_PCTics(3); A_Metal(); }
            SMCM h 4 { A_PCTics(3); A_Chase(); }
            Loop;

        Missile:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothMissile");
            CYBR E 6 A_FaceTarget;
            CYBR F 12 A_CyberAttack;
            CYBR E 12 A_FaceTarget;
            CYBR F 12 A_CyberAttack;
            CYBR E 12 A_FaceTarget;
            CYBR F 12 A_CyberAttack;
            Goto See;
        SmoothMissile:
            SMCS ab 2 a_facetarget;
		    SMCS c 2 a_facetarget;
		    SMCS d 3 a_cyberattack;
		    SMCS e 3;
		    SMCS c 6;
		    SMCS a 4 a_facetarget;
		    SMCS bc 4 a_facetarget;
		    SMCS d 3 a_cyberattack;
		    SMCS e 3;
		    SMCS c 6;
		    SMCS a 4 a_facetarget;
		    SMCS bc 4 a_facetarget;
		    SMCS d 3 a_cyberattack;
		    SMCS e 3;
		    SMCS c 6;
		    goto See;

        Pain:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothPain");
            CYBR G 10 A_Pain;
            Goto See;
        SmoothPain:
            SMCI a 4 A_Pain;
            SMCI bc 3;
            goto See;

        Death:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothDeath");
            CYBR H 10 A_GoreExplosion(10);
            CYBR I 10 { A_Scream(); A_ZPExplosion(); A_HQExplosion(); }
            CYBR J 10 A_HQExplosion;
            CYBR K 10 { A_ZPSmoke(); A_HQExplosion2(); }
            CYBR L 10 A_HQExplosion2;
            CYBR M 10 A_NoBlocking;
            CYBR NOPPP 10 A_HQSmoke;
            CYBR P -1 A_BossDeath;
            Stop;
        SmoothDeath:
            SMCD a 15 { A_GoreExplosion(10); A_HQExplosion(); }
            SMCD b 5 { A_Scream(); A_ZPExplosion(); }
            SMCD c 3;
            SMCD d 3 A_HQExplosion2;
            SMCD ef 3;
            SMCD g 3 A_ZPSmoke;
            SMCD hij 3;
            SMCD k 4 a_noblocking;
            SMCD lllll 10 A_HQSmoke;
            SMCD l 50;
            SMCD l -1 a_bossdeath;
            Stop;
	}
	
	//always slow down regardless of settings to make it more fair
	override void PostBeginPlay()
	{
		if (!ce_actortics)
		{
			reactiontime = int(reactiontime*SCALE_FRAME);
			speed *= SCAlE_TICRATE;
			vel *= SCALE_TICRATE;
		}
		super.PostBeginPlay();
	}

    void A_ZPExplosion()
    {
        if (zp_enabled && !hq_enabled)
        {
            A_SpawnItemEx("DeathSpawner_Cyberdemon",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
            A_StartSound("weapons/rocklx", CHAN_BODY);
        }
    }

    void A_ZPSmoke()
    {
        if (zp_enabled && !hq_enabled)
        {
            A_SpawnItem("BigSlowSmoke");
        }
    }

    void A_HQExplosion()
    {
        if (zp_enabled && hq_enabled)
        {
            A_SpawnItemEx("RandomExplosionSprite", 0, 16, 48, 0,0,0,0,0);
			A_SpawnItemEx("RandomExplosionSprite", 0, -8, 48, 0,0,0,0,0);
			A_SpawnItemEx("RandomExplosionSprite", 0, -4, 72, 0,0,0,0,0);
			A_StartSound("weapons/rocklx", CHAN_BODY);
        }
    }

    void A_HQExplosion2()
    {
        if (zp_enabled && hq_enabled)
        {
             for (int i = 0; i < 4; i++) A_SpawnItemEx("ExploFxSpawner",Random(-16,16),Random(-16,16),Random(8,96),0,0,0,0,0);
			A_SpawnItemEx("RandomExplosionSprite", 0, 20, 24, 0,0,0,0,0);
			A_SpawnItemEx("RandomExplosionSprite", 0, -14, 26, 0,0,0,0,0);
			A_SpawnItemEx("RandomExplosionSprite", 0, -7, 68, 0,0,0,0,0);
			A_StartSound("weapons/rocklx", CHAN_BODY);
			A_SpawnItemEx("MistXL",0,0,8,0.03*Random(-50,50),0.03*Random(-50,50),0.015*Random(-100,100),0,0,0);
			A_SpawnItem("BigSlowSmoke");
        }
    }

    void A_HQSmoke()
    {
        if (zp_enabled && hq_enabled)
        {
            A_SpawnItemEx("SlowSmoke",0,0,8,0.01*Random(-50,50),0.01*Random(-50,50),0.01*Random(40,100),0,0,136);
        }
    }
}