class PsxChainsaw : PsxDoomWeapon replaces Chainsaw
{
    Default
    {
		//$Title "Chainsaw"
		
        Weapon.Kickback 0;
		Weapon.SelectionOrder 2200;
		//Weapon.UpSound "weapons/sawup";
		//Weapon.ReadySound "weapons/sawidle";
		Inventory.PickupMessage "$GOTCHAINSAW";
		Obituary "$OB_MPCHAINSAW";
		Tag "$TAG_CHAINSAW";
		+WEAPON.MELEEWEAPON		

        Weapon.AmmoUse 0;
        Weapon.UpSound "";
        Weapon.ReadySound "";
	    Weapon.SlotNumber 1;
        Inventory.Icon "_CSWA0";
        PsxDoomWeapon.VanillaSprite "SAWG";
        PsxDoomWeapon.SmoothSprite "SAWS";
        PsxDoomWeapon.BlackSprite "BAWG";
        PsxDoomWeapon.ClassicSprite "1AWG";
    }

	States
	{
        SwapSprites:
            SAWG A 0; SAWS A 0; BAWG A 0; 1AWG A 0;
            Stop;

        Ready:
            TNT1 A 0 { 
                A_StopSound(CHAN_WEAPON);
                A_StartSound("weapons/sawidle", CHAN_6);
            }
            TNT1 A 0 A_SwapSprites;
            "####" CD 4 A_WeaponReady(WRF_ALLOWUSER1);
            "####" A 0 A_ZPSmoke;
            Loop;
        SmoothReady:
            TNT1 A 0 A_SwapSprites;
            "####" CCDDEEEFFF 1 A_WeaponReady(WRF_ALLOWUSER1);
            "####" A 0 A_ZPSmoke;
            Goto Ready;

        Deselect:
			TNT1 A 0 { A_SwapSprites(); A_StopSound(CHAN_6); }
		    "####" A 1 A_FastLower;
            Loop;

        Select:
            TNT1 C 0 { A_SwapSprites(); A_StartSound("weapons/sawup", CHAN_AUTO); }
        Select.Raise:
            "####" A 1 A_FastRaise;
            Loop;

        Fire:
            TNT1 A 0 {
                A_StartSound("weapons/sawfull", CHAN_WEAPON, CHANF_LOOPING|CHANF_LOCAL, 0);
                A_StopSound(CHAN_6);
            }
            TNT1 A 0 A_SwapSprites;
		    "####" AB 4 A_PsxSaw;
            "####" B 0 A_ReFire;
            Goto Ready;
        SmoothFire:
            TNT1 A 0 A_SwapSprites;
		    "####" A 2 { A_PsxSaw(); A_RecoilPitch(2, 0.4); }
            "####" BB 1;
		    "####" A 2 { A_PsxSaw(); A_RecoilPitch(2, 0.4); }
            "####" BB 1;
            "####" B 0 A_ReFire;
            Goto Ready;
        SmoothSlowFire:
            TNT1 A 0 A_SwapSprites;
		    "####" A 3 { A_PsxSaw(); A_RecoilPitch(2, 0.4); }
            "####" BB 1;
		    "####" A 3 { A_PsxSaw(); A_RecoilPitch(2, 0.4); }
            "####" BB 1;
            "####" B 0 A_ReFire;
            Goto Ready;

        Spawn:
            CSAW A -1;
            Stop;
	}
	
	override void PostBeginPlay()
	{
		bEXTREMEDEATH = ce_gibrules;
		super.PostBeginPlay();
	}

    action void A_ZPSmoke()
    {
        if (zp_enabled)
        {
            A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,0,80);
    		A_SpawnItemEx("SawSmoke",cos(pitch)*15,random(8,10),sin(-pitch)*25+random(22,26),0,0,1,0,0,210);
        }
    }
}

extend class PsxDoomWeapon
{
	action void A_PsxSaw()
    {
        A_Saw("weapons/sawfull","weapons/sawhit",(random(1, 8) * 3),"PSXChainsawPuff",SF_NORANDOM, 70 + 1, SPREAD_XY);
    }
}
