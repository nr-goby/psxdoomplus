class PsxZombieman : PsxActor replaces Zombieman
{
    Default
    {
		//$Title "Former Human"
		
        Health 20;
		Radius 20;
		Height 56;
		Speed 8;
		PainChance 200;
		Monster;
		+FLOORCLIP
		SeeSound "grunt/sight";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "$OB_ZOMBIE";
		Tag "$FN_ZOMBIE";
		DropItem "Clip";

        PsxActor.FootstepSound "monster/zombie1step";
        PsxActor.DeathThudSound "monster/xbody";
        +MOVEWITHSECTOR;
        +PsxActor.WAITLOOK;
        +PsxActor.SEETARGET;
		PsxActor.NightmareMissileChanceFactor 1.0;
		PsxActor.NightmareTicFactor 0.8;
    }

    States
	{
        Spawn:
            POSS A 0 nodelay a_jumpif(IsSmooth(), "SmoothSpawn");
            POSS AB 10 A_Look;
            Loop;
        SmoothSpawn:
            PSSS AB 10 A_Look;
		    loop;

        See:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothSee");
            POSS AAB 4 A_Chase;
            POSS B 4 { A_Chase(); A_Footstep(); }
            POSS CCD 4 A_Chase;
            POSS D 4 { A_Chase(); A_Footstep(); }
            Loop;
        SmoothSee:
            TNT1 A 0 a_jumpif(ce_actortics, "SmoothSeeSlow");
            SPZM ABC 4 A_Chase;
            SPZM D 4 { A_Chase(); A_Footstep(); }
            SPZM DCB 4 A_Chase;
            SPZM A 4 { A_Chase(); A_Footstep(); }
            Loop;
        SmoothSeeSlow:
            SPZM ABC 4 A_Chase;
            SPZM D 4 { A_Chase(); A_Footstep(); }
            SPZM DCB 4 A_Chase;
            SPZM A 4 { A_Chase(); A_Footstep(); }
            Loop;

        Missile:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothMissile");
            POSS E 10 A_FaceTarget;
            POSS F 8 A_PosAttack;
            POSS E 8;
            Goto See;
        SmoothMissile:
            PSSA A 5 A_FaceTarget;
            PSSA B 2 A_FaceTarget;
            SPZM E 3 A_FaceTarget;
            SPZM F 3 bright A_PosAttack;
            SPZM E 4;
            PSSA BA 4;
            PSSA A 3;
            Goto See;

        Pain:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothPain");
            POSS G 2;
            POSS G 4 A_Pain;
            Goto See;
        SmoothPain:
            stro a 3;
            stro b 3 A_Pain;
            goto See;

        Death:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothDeath");
            POSS H 4;
            POSS I 6 A_Scream;
            POSS J 4 A_NoBlocking;
            POSS K 6;
            TNT1 A 0 A_DeathThud;
            POSS L -1;
            Stop;
        SmoothDeath:
            5OSS A 3 A_Scream;
            5OSS BC 3;
            5OSS DEF 2;
            5OSS G 2 A_NoBlocking;
            5OSS H 3 A_DeathThud;
            5OSS I 3;
            5OSS I -1;
            Stop;

        XDeath:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothXDeath");
            POSS M 4 A_GoreExplosion;
            POSS N 6 A_XScream;
            POSS O 4 A_NoBlocking;
            POSS P 6;
            POSS Q 4;
            POSS R 6;
            POSS S 4;
            POSS T 6;
            POSS U -1;
            Stop;
        SmoothXDeath:
            TGIB A 2 A_GoreExplosion;
            TGIB B 2;
			TGIB C 2;
			TGIB DE 2;
			TGIB F 2 A_XScream;
			TGIB GH 2;
			TGIB I 2 A_NoBlocking;
			TGIB JKLMNOP 2;
			TGIB Q -1;
            Stop;

        Raise:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothRaise");
            POSS K 5;
            POSS JIH 5;
            Goto See;
        SmoothRaise:
            5OSS IH 3;
            5OSS GFEDCBA 2;
            Goto See;
	}
	
	override void PostBeginPlay()
	{
		if (ce_gibrules) bEXTREMEDEATH = false;
		super.PostBeginPlay();
	}
}

class PsxShotgunguy : PsxActor replaces Shotgunguy
{
    Default
    {
		//$Title "Former Sargeant"
		
        Health 30;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "shotguy/sight";
		AttackSound "shotguy/attack";
		PainSound "shotguy/pain";
		DeathSound "shotguy/death";
		ActiveSound "shotguy/active";
		Obituary "$OB_SHOTGUY";
		Tag "$FN_SHOTGUN";
		DropItem "Shotgun";

        PsxActor.FootstepSound "monster/zombie2step";
        PsxActor.DeathThudSound "monster/xbody";
        +MOVEWITHSECTOR;
        +PsxActor.WAITLOOK;
        +PsxActor.SEETARGET;
		PsxActor.NightmareMissileChanceFactor 1.0;
		PsxActor.NightmareTicFactor 0.8;
    }

    States
	{
        Spawn:
            SPOS A 0 nodelay a_jumpif(IsSmooth(), "SmoothSpawn");
            SPOS AB 10 A_Look;
            Loop;
        SmoothSpawn:
            SARR AB 10 A_Look;
            loop;

        See:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothSee");
            SPOS A 2 A_Chase;
            SPOS A 4 A_Chase;
            SPOS B 2 A_Chase;
            SPOS B 4 { A_Chase(); A_Footstep(); }
            SPOS C 2 A_Chase;
            SPOS C 4 A_Chase;
            SPOS D 2 A_Chase;
            SPOS D 4 { A_Chase(); A_Footstep(); }
            Loop;
        SmoothSee:
            SSGY A 3 A_Chase;
            SSGY B 3 A_Chase;
            SSGY C 3 A_Chase;
            SSGY D 3 { A_Chase(); A_Footstep(); }
            SSGY D 3 A_Chase;
            SSGY C 3 A_Chase;
            SSGY B 3 A_Chase;
            SSGY A 3 { A_Chase(); A_Footstep(); }
            Loop;

        Missile:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothMissile");
            SPOS E 10 A_FaceTarget;
            SPOS F 10 BRIGHT A_SposAttackUseAtkSound;
            SPOS E 10;
            Goto See;
        SmoothMissile:
            SPSR A 1 A_FaceTarget;
            SPSR AC 2 A_FaceTarget;
            SSGY E 5 A_FaceTarget;
            SSGY F 3 BRIGHT A_SposAttackUseAtkSound;
            SSGY E 2 BRIGHT;
            SPSR CA 3;
            SPSR ABA 3;
            Goto See;

        Pain:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothPain");
            SPOS G 2;
            SPOS G 4 A_Pain;
            Goto See;
        SmoothPain:
            SSPA a 3;
            SSPA b 3 A_Pain;
            goto See;

        Death:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothDeath");
            SPOS H 4;
            SPOS I 6 A_Scream;
            SPOS J 4 A_NoBlocking;
            SPOS K 6;
            TNT1 A 0 A_DeathThud;
            SPOS L -1;
            Stop;
        SmoothDeath:
            SOSS Q 3;
            SOSS R 3 A_Scream;
            SOSS S 3 A_NoBlocking;
            SOSS TUV 2;
            SOSS W 2 A_DeathThud;
            SOSS X 2;
            SOSS Y -1;
            Stop;

        XDeath:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothXDeath");
            SPOS M 4 A_GoreExplosion;
            SPOS N 6 A_XScream;
            SPOS O 4 A_NoBlocking;
            SPOS P 6;
            SPOS Q 4;
            SPOS R 6;
            SPOS S 4;
            SPOS T 6;
            SPOS U -1;
            Stop;
        SmoothXDeath:
            SGIB A 2 A_GoreExplosion;
            SGIB B 2;
			SGIB C 2 A_XScream;
			SGIB DE 2;
			SGIB F 2 A_NoBlocking;
			SGIB GHIJKLMNOP 2;
			SGIB Q -1;
            Stop;

        Raise:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothRaise");
            SPOS L 5;
            SPOS KJIH 5;
            Goto See;
        SmoothRaise:
            SOSS YXWVUT 2;
            SOSS SRQ 3;
            Goto See;
	}
	
	override void PostBeginPlay()
	{
		if (ce_gibrules) bEXTREMEDEATH = false;
		super.PostBeginPlay();
	}
}

class PsxChaingunguy : PsxActor replaces Chaingunguy
{
    Default
    {
		//$Title "Chaingunner"
		
        Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "chainguy/attack";
		Obituary "$OB_CHAINGUY";
		Tag "$FN_HEAVY";
		Dropitem "Chaingun";

        PsxActor.FootstepSound "monster/zombie3step";
        PsxActor.DeathThudSound "monster/xbody";
        +MOVEWITHSECTOR;
        +PsxActor.WAITLOOK;
        +PsxActor.SEETARGET;
		PsxActor.NightmareMissileChanceFactor 1.0;
		PsxActor.NightmareTicFactor 0.8;
    }

    States
	{
        Spawn:
            CPOS A 0 nodelay a_jumpif(IsSmooth(), "SmoothSpawn");
            CPOS AB 10 A_Look;
            Loop;
        SmoothSpawn:
            SCPS AB 10 A_Look;
            Loop;

        See:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothSee");
            CPOS AAB 4 { A_PCTics(3); A_Chase(); }
            CPOS B 4 { A_PCTics(3); A_Chase(); A_Footstep(); }
            CPOS CCD 4 { A_PCTics(3); A_Chase(); }
            CPOS D 4 { A_PCTics(3); A_Chase(); A_Footstep(); }
            Loop;
        SmoothSee:
            SCPS A 4 { A_PCTics(3); A_Chase(); }
            SCPS B 4 { A_PCTics(3); A_Chase(); }
            SCPS C 4 { A_PCTics(3); A_Chase(); }
            SCPS D 4 { A_PCTics(3); A_Chase(); A_Footstep(); }
            SCPS D 4 { A_PCTics(3); A_Chase(); }
            SCPS C 4 { A_PCTics(3); A_Chase(); }
            SCPS B 4 { A_PCTics(3); A_Chase(); }
            SCPS A 4 { A_PCTics(3); A_Chase(); A_Footstep(); }
            Loop;

        Missile:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothMissile");
            CPOS E 10 A_FaceTarget;
            CPOS FE 4 BRIGHT A_CPosAttack;
            CPOS F 0 { A_PCTics(1); A_CPosRefire(); }
            Goto Missile+2;
        SmoothMissile:
            CPAS A 3 A_FaceTarget;
            CPAS BC 2 A_FaceTarget;
            SCPS E 3 A_FaceTarget;
            SCPS F 3 BRIGHT A_CPosAttack;
            SCPS E 1 BRIGHT;
            SCPS F 3 BRIGHT A_CPosAttack;
            SCPS E 1 BRIGHT;
            SCPS E 0 { A_PCTics(1); A_CPosRefire(); }
            Goto SmoothMissile+4;

        Pain:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothPain");
            CPOS G 2 A_PCTics(3);
            CPOS G 2 { A_PCTics(3); A_Pain(); }
            Goto See;
        SmoothPain:
            XPOS A 2 A_PCTics(3);
            XPOS B 2 { A_PCTics(3); A_Pain(); }
            Goto see;

        Death:
            TNT1 A 0 a_jumpif(IsSmooth(), "SmoothDeath");
            CPOS H 4;
            CPOS I 4 A_Scream;
            CPOS J 4 A_NoBlocking;
            CPOS K 4;
            CPOS L 4;
            CPOS M 4;
            TNT1 A 0 A_DeathThud;
            CPOS N -1;
            Stop;
        SmoothDeath:
            CGUY a 3;
            CGUY b 3 A_Scream;
            CGUY c 3;
            CGUY de 2;
            CGUY f 2 A_noblocking;
            CGUY gh 2;
            CGUY i 2 A_DeathThud;
            CGUY jkl 2;
            CGUY m -1;
            Stop;

        XDeath:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothXDeath");
            CPOS O 4 A_GoreExplosion;
            CPOS P 4 A_XScream;
            CPOS Q 4 A_NoBlocking;
            CPOS R 4;
            CPOS S 4;
            CPOS T -1;
            Stop;
        SmoothXDeath:
            CGIB A 2 A_GoreExplosion;
            CGIB B 2;
			CGIB C 2 A_XScream;
			CGIB DE 2;
			CGIB F 2 A_NoBlocking;
			CGIB GHIJ 2;
			CGIB K -1;
            Stop;
        
        Raise:
			TNT1 A 0 a_jumpif(IsSmooth(), "SmoothRaise");
            CPOS N 5;
            CPOS MLKJIH 5;
            Goto See;
        SmoothRaise:
            CGUY MLKJIHGFED 3;
            CGUY CBA 2;
            Goto See;
	}
	
	override void PostBeginPlay()
	{
		if (ce_gibrules) bEXTREMEDEATH = false;
		super.PostBeginPlay();
	}
}

class PsxWolfensteinSS : PsxActor replaces WolfensteinSS
{
    Default
    {
		//$Title "Wolfenstein SS"
		
        Health 50;
		Radius 20;
		Height 56;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "wolfss/sight";
		PainSound "wolfss/pain";
		DeathSound "wolfss/death";
		ActiveSound "wolfss/active";
		AttackSound "wolfss/attack";
		Obituary "$OB_WOLFSS";
		Tag "$FN_WOLFSS";
		Dropitem "Clip";

        PsxActor.FootstepSound "monster/zombie3step";
        PsxActor.DeathThudSound "monster/xbody";
        +MOVEWITHSECTOR;
        +PsxActor.WAITLOOK;
        +PsxActor.SEETARGET;
		PsxActor.NightmareMissileChanceFactor 1.0;
		PsxActor.NightmareTicFactor 0.8;
    }

    States
	{
        Spawn:
            SSWV AB 10 A_Look;
            Loop;

        See:
            SSWV AAB 3 A_Chase;
            SSWV B 3 { A_Chase(); A_Footstep(); }
            SSWV CCD 3 A_Chase;
            SSWV D 3 { A_Chase(); A_Footstep(); }
            Loop;

        Missile:
            SSWV E 10 A_FaceTarget;
            SSWV F 10 A_FaceTarget;
            SSWV G 4 BRIGHT A_CPosAttack(22.5);
            SSWV F 6 A_FaceTarget;
            SSWV G 4 BRIGHT A_CPosAttack(22.5);
            SSWV F 1 A_CPosRefire;
            Goto Missile+1;

        Pain:
            SSWV H 3;
            SSWV H 3 A_Pain;
            Goto See;

        Death:
            SSWV I 5;
            SSWV J 5 A_Scream;
            SSWV K 5 A_NoBlocking;
            SSWV L 5;
            TNT1 A 0 A_DeathThud;
            SSWV M -1;
            Stop;

        XDeath:
            SSWV N 5 A_GoreExplosion;
            SSWV O 5 A_XScream;
            SSWV P 5 A_NoBlocking;
            SSWV QRSTU 5;
            SSWV V -1;
            Stop;

        Raise:
            SSWV M 5;
            SSWV LKJI 5;
            Goto See ;
	}
}

extend class PsxActor
{
	void A_PosAttack()
    {
        A_PsxBulletAttack(SPREAD_XY, 1, 8);
        A_BulletCasing();
    }
	
	void A_SposAttackUseAtkSound()
    {
        A_PsxBulletAttack(SPREAD_XY, 3);
        A_ShellCasing();
    }
	
	void A_CPosAttack(double spread = SPREAD_XY)
    {
        A_PsxBulletAttack(spread);
        A_BulletCasing();
    }
}
