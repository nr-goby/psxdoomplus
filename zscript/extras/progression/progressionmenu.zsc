class ProgressionDynamicMenu : OptionMenu
{

	override void Init(Menu parent, OptionMenuDescriptor desc)
	{
		super.Init(parent, desc);
	}

  override bool OnUIEvent(UIEvent ev)
  {
    let event = ProgressionHandler(EventHandler.Find("ProgressionHandler"));
    
    let plr = players[consoleplayer].mo;
    int currency = event.tallyTracker.currency;

    mDesc.mItems[0].mLabel = String.Format("Currency: %i", currency);

    mDesc.mItems[3].mLabel = String.Format("Current Max Health: %i | Current Health Level: %i/5 | Next level: %i currency", 
    plr.MaxHealth, event.healthLevel, event.healthLevel + 1);
    mDesc.mItems[7].mLabel = String.Format("Current Damage Reduction: %i%% | Current DR Level: %i/5 | Next level: %i currency", 
    (event.protectionLevel * 5), event.protectionLevel, event.protectionLevel + 1);

    mDesc.mItems[11].mLabel = String.Format("Current Max Bullet Ammo: %i (%i) | Current Level: %i/2 | Next level: %i currency", 
    (event.bulletAmmoLevel * 50) + 200, ((event.bulletAmmoLevel * 50) * 2) + 400, event.bulletAmmoLevel, (event.bulletAmmoLevel + 1) * 3);
    mDesc.mItems[13].mLabel = String.Format("Current Max Shell Ammo: %i (%i) | Current Level: %i/2 | Next level: %i currency", 
    (event.shellAmmoLevel * 10) + 50, ((event.shellAmmoLevel * 10) * 2) + 100, event.shellAmmoLevel, (event.shellAmmoLevel + 1) * 3);
    mDesc.mItems[15].mLabel = String.Format("Current Max Rocket Ammo: %i (%i) | Current Level: %i/2 | Next level: %i currency", 
    (event.rocketAmmoLevel * 10) + 50, ((event.rocketAmmoLevel * 10) * 2) + 100, event.rocketAmmoLevel, (event.rocketAmmoLevel + 1) * 3);
    mDesc.mItems[17].mLabel = String.Format("Current Max Cell Ammo: %i (%i) | Current Level: %i/2 | Next level: %i currency", 
    (event.cellAmmoLevel * 50) + 300, ((event.cellAmmoLevel * 50) * 2) + 600, event.cellAmmoLevel, (event.cellAmmoLevel + 1) * 3);
    
    mDesc.mItems[21].mLabel = String.Format("Current Damage Increase: %i%% | Current DR Level: %i/5 | Next level: %i currency", 
    (event.damageLevel * 5), event.damageLevel, event.damageLevel + 1);
    
    return super.OnUIEvent(ev);
  }

  override bool MenuEvent (int mkey, bool fromcontroller) {
    return Super.MenuEvent(mkey, fromcontroller);
  }
	
}